import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect } from "react";
import styles from "../styles/Home.module.css";
import useSWR from 'swr' // Handle data loading / error / successful states
import fetcher from "../lib/fetcher";
import { useState } from "react";
import DataCard from "../components/DataCard";
import HomeCard from "../components/HomeCard";
import React from "react";

var mapboxgl = require("mapbox-gl/dist/mapbox-gl.js");

// TODO: Hide access token in environmental variable
mapboxgl.accessToken = 'pk.eyJ1IjoidXNrb21wdWYiLCJhIjoiY2pnZzJvcHR4MDl0czJ4cW0zZTAxYnY5ZiJ9.EtWLN3Q74QDC6PpFDsvFig';

const Home: NextPage = () => {

  // When postcode is searched via the box or by clicking, set value to postcode
  const [postcode, setPostcode] = useState(null);
  const [dataVisible, setDataVisible] = useState(false)

  // Postcode search logic
  useEffect(() => {
    // Prevent hook from running on initial render
    if (postcode !== null) {
      console.log("Postcode search triggered")
      console.log(`The postcode you searched for is ${postcode}`)
      // Return data card
      setDataVisible(true);
      
    }
  }, [postcode])


  useEffect(() => {
    const map = new mapboxgl.Map({
      // Map controls
      // Use our data visualisation with postcode boundaries, etc.
      style: 'mapbox://styles/uskompuf/cl01t9qd2008m14p7zm4bgg9d',
      // Center map to Sydney
      center: [151.209, -33.8688],
      // Zoom out a bit
      zoom: 12.5,
      // Pitch map a bit for '3D' effect
      pitch: 30,
      // bearing: -17.6,
      container: 'mapbox',
      });  
      let currentPostcode = null;

      // Initialise address search input
      map.addControl(new mapboxgl.NavigationControl())
      

      // Return location that user searches for
      // TODO: Make this return suburb, etc to hook up to data

      // Initialise search input
      const geocoder = new MapboxGeocoder({
          accessToken: mapboxgl.accessToken,
          mapboxgl: mapboxgl,
          // Limit search country to Australia
          countries: "au",
          // Limit search types to postcode / suburb
          types: "postcode",
      })

      // Add geocoder to map
      map.addControl(geocoder);

      // Console log current postcode
      map.on('mousemove', 'poa-2021-aust-gda2020-shp-78l7af', (e) => {
        if (e.features.length > 0) {
          let tempPostcode = e.features[0].properties.POA_CODE21;
          if (currentPostcode == null || currentPostcode != tempPostcode) {
            console.log(tempPostcode);
          }
          currentPostcode = tempPostcode;
          setPostcode(currentPostcode);
        }
      });
  
      map.on('mouseleave', 'poa-2021-aust-gda2020-shp-78l7af', () => {
        currentPostcode = null;
      });

      // When postcode is searched, return data in card
      geocoder.on('result', function(result) {
        map.setLayoutProperty('final-dyqn3f (1)', 'visibility', 'visible');
        console.log(map.getStyle().layers);
        console.log(result.result.text);
        setPostcode(result.result.text);
      });
  }, []);

  return (
    <div className="flex items-center justify-center min-h-screen">
      <Head>
        <title>UNIHACK '22'</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
      {/* Split off landing card into React component? Then have info card as separate, etc. */}
      {dataVisible === true && (
        <DataCard postcode={postcode} />
      )}
      {dataVisible === false && (
        <HomeCard />
      )}

        
      <div id="mapbox" className="w-screen h-screen" />

      </main>
    </div>
  );
};

export default Home;
